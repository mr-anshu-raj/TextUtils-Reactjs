{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","class","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalise","msg","data-bs-dismiss","aria-label","About","myStyle","color","Mode","backgroundColor","className","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","href","title","aria-current","onClick","togglemode","htmlFor","defaultProptypes","aboutText","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","showAlert","navigator","clipboard","writeText","document","getSelection","removeAllRanges","split","join","filter","element","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","components_TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAiBeA,MAff,SAAeC,GAKb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,OAAQ,SACpBL,EAAMM,OAASL,EAAAC,EAAAC,cAAA,OAAKI,MAAK,eAAAC,OAAiBR,EAAMM,MAAMG,KAAI,gCAAgCC,KAAK,SAC5FT,EAAAC,EAAAC,cAAA,cAPc,SAACQ,GACf,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAK1CC,CAAWjB,EAAMM,MAAMG,OAAe,KAAGT,EAAMM,MAAMY,IAC9DjB,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASF,MAAM,YAAYY,kBAAgB,QAAQC,aAAW,aCPpE,SAASC,EAAMrB,GAQ1B,IAAIsB,EAAQ,CACRC,MAAqB,SAAdvB,EAAMwB,KAAe,QAAQ,UACpCC,gBAAgC,SAAfzB,EAAMwB,KAAgB,iBAAiB,SAG9D,OACEvB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,kBACXzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACmB,MAAqB,SAAdvB,EAAMwB,KAAe,QAAQ,YAAY,mBAC5DvB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,YAAYC,GAAG,yBAC9B1B,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,kBACXzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,mBAAmBC,GAAG,oBACpC1B,EAAAC,EAAAC,cAAA,UAAQuB,UAAU,6BAA6BtB,MAAOkB,EAASb,KAAK,SAASmB,iBAAe,WAAWC,iBAAe,qBAAqBC,gBAAc,QAAQC,gBAAc,qBAAoB,uBAInM9B,EAAAC,EAAAC,cAAA,OAAKwB,GAAG,oBAAoBD,UAAU,8BAA8BM,kBAAgB,mBAAmBC,iBAAe,0BACtHhC,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,iBAAiBtB,MAAOkB,GAAS,8LAGpDrB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,kBACXzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,mBAAmBC,GAAG,oBACpC1B,EAAAC,EAAAC,cAAA,UAAQuB,UAAU,6BAA6BtB,MAAOkB,EAASb,KAAK,SAASmB,iBAAe,WAAWC,iBAAe,qBAAqBC,gBAAc,QAAQC,gBAAc,qBAAoB,sBAInM9B,EAAAC,EAAAC,cAAA,OAAKwB,GAAG,oBAAoBD,UAAU,8BAA8BM,kBAAgB,mBAAmBC,iBAAe,0BACtHhC,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,iBAAiBtB,MAAOkB,GAAS,8GAGpDrB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,kBACXzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,mBAAmBC,GAAG,sBACpC1B,EAAAC,EAAAC,cAAA,UAAQuB,UAAU,6BAA6BtB,MAAOkB,EAASb,KAAK,SAASmB,iBAAe,WAAWC,iBAAe,uBAAuBC,gBAAc,QAAQC,gBAAc,uBAAsB,iCAIvM9B,EAAAC,EAAAC,cAAA,OAAKwB,GAAG,sBAAsBD,UAAU,8BAA8BM,kBAAgB,qBAAqBC,iBAAe,0BAC1HhC,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,iBAAiBtB,MAAOkB,GAAS,2KC7C7C,SAASY,EAAOlC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKuB,UAAS,kCAAAlB,OAAoCR,EAAMwB,KAAI,QAAAhB,OAAOR,EAAMwB,OACrEvB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,mBACXzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,eAAeS,KAAK,IAAInC,EAAMoC,OAC3CnC,EAAAC,EAAAC,cAAA,UAAQuB,UAAU,iBAAiBjB,KAAK,SAASmB,iBAAe,WAAWC,iBAAe,0BAA0BE,gBAAc,yBAAyBD,gBAAc,QAAQV,aAAW,qBACxLnB,EAAAC,EAAAC,cAAA,QAAMuB,UAAU,yBAEpBzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,2BAA2BC,GAAG,0BACzC1B,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,mCACVzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,YACVzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,kBAAkBW,eAAa,OAAOF,KAAK,IAAG,UAOnElC,EAAAC,EAAAC,cAAA,OAAKuB,UAAS,+BAAAlB,OAA8C,UAAbR,EAAMwB,KAAe,OAAO,UACvEvB,EAAAC,EAAAC,cAAA,SAAOuB,UAAU,mBAAmBY,QAAStC,EAAMuC,WAAY9B,KAAK,WAAWkB,GAAG,2BAA0B,IAC5G1B,EAAAC,EAAAC,cAAA,SAAOuB,UAAU,mBAAmBc,QAAQ,0BAAyB,uBAczFN,EAAOO,iBAAkB,CACrBL,MAAO,QACPM,UAAW,SCvCf,IAmEeC,EAnEE,SAAC3C,GAAU,IAAA4C,EACAC,mBAAS,mBAAkBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA5CK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GA0CtB,OACE7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiD,SAAA,KACAlD,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,YAAYtB,MAAO,CAACmB,MAAoB,UAAbvB,EAAMwB,KAAe,OAAO,UAClEvB,EAAAC,EAAAC,cAAA,UAAKH,EAAMoD,SACXnD,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,QACXzB,EAAAC,EAAAC,cAAA,YAAUuB,UAAU,eAAetB,MAAO,CAACqB,gBAA8B,UAAbzB,EAAMwB,KAAe,QAAQ,UACzFD,MAAoB,UAAbvB,EAAMwB,KAAe,QAAQ,SAAU6B,MAAOJ,EAAMK,SA9B5C,SAACC,GAEpBL,EAAQK,EAAMC,OAAOH,QA4BoE1B,GAAG,QAAQ8B,KAAK,OAEzGxD,EAAAC,EAAAC,cAAA,UAAQuD,SAAwB,IAAdT,EAAKU,OAAYjC,UAAU,4BAA4BY,QA9CvD,WAElB,IAAIsB,EAAQX,EAAKlC,cACjBmC,EAAQU,GACR5D,EAAM6D,UAAU,yBAA0B,aA0CuD,wBACjG5D,EAAAC,EAAAC,cAAA,UAAQuD,SAAwB,IAAdT,EAAKU,OAAYjC,UAAU,4BAA4BY,QAxCvD,WAElB,IAAIsB,EAAQX,EAAKpC,cACjBqC,EAAQU,GACR5D,EAAM6D,UAAU,yBAA0B,aAoCuD,wBACjG5D,EAAAC,EAAAC,cAAA,UAAQuD,SAAwB,IAAdT,EAAKU,OAAYjC,UAAU,4BAA4BY,QA7B3D,WACdwB,UAAUC,UAAUC,UAAUf,GAC9BgB,SAASC,eAAeC,kBACxBnE,EAAM6D,UAAU,cAAe,aA0B+D,aAC9F5D,EAAAC,EAAAC,cAAA,UAAQuD,SAAwB,IAAdT,EAAKU,OAAYjC,UAAU,4BAA4BY,QAxBnD,WACtB,IAAIsB,EAAUX,EAAKmB,MAAM,QACzBlB,EAAQU,EAAQS,KAAK,MACrBrE,EAAM6D,UAAU,uBAAwB,aAqB6D,wBAEzG5D,EAAAC,EAAAC,cAAA,UAAQuD,SAAwB,IAAdT,EAAKU,OAAYjC,UAAU,yBAAyBY,QApB9C,WAEpBY,EADY,IAEZlD,EAAM6D,UAAU,eAAgB,aAiB4D,cAChG5D,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,iBAAiBtB,MAAO,CAACmB,MAAoB,UAAbvB,EAAMwB,KAAe,OAAO,UACvEvB,EAAAC,EAAAC,cAAA,UAAI,qBACJF,EAAAC,EAAAC,cAAA,SAAI8C,EAAKmB,MAAM,OAAOE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQZ,SAAaA,OAAO,cAAYV,EAAKU,OAAO,cACpG1D,EAAAC,EAAAC,cAAA,UAAI,WACJF,EAAAC,EAAAC,cAAA,SAAI8C,EAAKU,OAAO,EAAEV,EAAK,yBCfhBuB,MAvCf,WAAe,IAAA5B,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCpB,EAAIsB,EAAA,GAAE2B,EAAO3B,EAAA,GAAA4B,EACM7B,mBAAS,MAAK8B,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAAjCpE,EAAKqE,EAAA,GAAEC,EAAQD,EAAA,GAEhBd,EAAY,SAACgB,EAASpE,GAC1BmE,EAAS,CACP1D,IAAK2D,EACLpE,KAAMA,IAERqE,WAAW,WACTF,EAAS,OACR,OAgBL,OACE3E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiD,SAAA,KACElD,EAAAC,EAAAC,cAAC+B,EAAM,CAACE,MAAM,YAAYM,UAAU,kBAAkBlB,KAAMA,EAAMe,WAfnD,WACP,UAAPf,GACDiD,EAAQ,QACRR,SAASc,KAAK3E,MAAMqB,gBAAiB,UACrCoC,EAAU,6BAA8B,aAGxCY,EAAQ,SACRR,SAASc,KAAK3E,MAAMqB,gBAAiB,QACrCoC,EAAU,8BAA+B,eAOzC5D,EAAAC,EAAAC,cAAC6E,EAAK,CAAC1E,MAAOA,IACdL,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,kBACbzB,EAAAC,EAAAC,cAAC8E,EAAQ,CAAC7B,QAAQ,sCAAsC5B,KAAMA,EAAMqC,UAAWA,KAEjF5D,EAAAC,EAAAC,cAACkB,EAAK,CAACG,KAAMA,MC/BJ0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW/B,SAASgC,eAAe,SACpDC,OACHjG,EAAAC,EAAAC,cAACF,EAAAC,EAAMiG,WAAU,KACflG,EAAAC,EAAAC,cAACiG,EAAG,QAORlB","file":"static/js/main.8c5d5ff7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalise =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '40px'}}>\r\n    {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg}\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\n\r\nexport default function About(props) {\r\n\r\n    //const [myStyle, setmyStyle] = useState({\r\n    //    color: 'black',\r\n    //    backgroundColor: 'white',\r\n        //border: '1px solid white'\r\n    //})\r\n\r\n    let myStyle={\r\n        color: props.Mode ==='dark'?'white':'#042743',\r\n        backgroundColor: props.Mode === 'dark'?'rgb(36 74 104)':'white' \r\n    }\r\n\r\n  return (\r\n    <div className='container mb-5'>\r\n        <br></br>\r\n        <h3 style={{color: props.Mode ==='dark'?'white':'#042743'}}>About TextUtils</h3>\r\n        <div className=\"accordion\" id=\"accordionFlushExample\">\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                What is TextUtils? \r\n            </button>\r\n            </h2>\r\n            <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>TextUtils is a simple text editor which can be used to change the text from lowercase to uppercase or vice cersa, remove extra spaces in the paragraphes and copy the text to clipboard.</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n                About the Creater\r\n            </button>\r\n            </h2>\r\n            <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>This website is created by Anshu Raj, currently persuing Electrical Engineering from M.I.T. Muzaffarpur.</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n                Future scope of this website\r\n            </button>\r\n            </h2>\r\n            <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>This website will be more enhaced using css. More button with different and unique commands will be added in future. Seperate page for About section will be added.</div>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n                    </li>\r\n                    {/*<li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                    </li>*/}\r\n                </ul>\r\n                \r\n                <div className={`form-check form-switch text-${props.Mode==='light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/> {/*role=switch*/}\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">EnableDarkMode</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProptypes ={\r\n    title: 'Title',\r\n    aboutText: 'About'\r\n}","import React, { useState } from 'react'\r\n\r\nconst TextForm = (props) => {\r\n    const [text, setText] = useState('Enter text here');\r\n    //setText('new text');\r\n\r\n\r\n    const handleUpClick = () =>{\r\n        //console.log(\"uppercase was clicked\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () =>{\r\n        //console.log(\"uppercase was clicked\");\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        //console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy =()=>{\r\n        navigator.clipboard.writeText(text);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text copied\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed extra spaces\", \"success\");\r\n    }\r\n\r\n    const handleClearText = () =>{\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\", \"success\");\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.Mode==='light'?'grey':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" style={{backgroundColor: props.Mode==='light'?'white':'#13466e', \r\n            color: props.Mode==='light'?'black':'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert to uppercase</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleLoClick}>Convert to lowercase</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleCopy}>Copy Text</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n    </div>\r\n    <button disabled={text.length===0} className='btn btn-info mx-3 my-1' onClick={handleClearText}>Clear Text</button>\r\n    <div className='container my-3' style={{color: props.Mode==='light'?'grey':'white'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} character</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextForm\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React from \"react\";\n\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1250);\n  }\n\n  const togglemode = () => {\n    if(Mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor= '#23294a';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor= 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"Textutils\" aboutText=\"About Textutils\" Mode={Mode} togglemode={togglemode}/>\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n        <TextForm heading=\"Enter the text to perform an action\" Mode={Mode} showAlert={showAlert}/> \n      </div>\n      <About Mode={Mode}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}